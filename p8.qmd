---
title: "p8"
author: "Zahra Makim"
format: html
---


## p8!

```{r}
library(tidyverse)
library(nycflights13)
```

##21.3.4 Exercises 

## 1. Find the 48 hours (over the course of the whole year) that have the worst delays. Cross-reference it with the weather data. Can you see any patterns?

```{r}
flights2 <- flights |>
  select(year, month, day, dep_delay) |>
  arrange(desc(dep_delay))
  
flights2 |>
  left_join(weather |> select(day, year, month, temp, wind_speed, precip))

```
## 2. Imagine you’ve found the top 10 most popular destinations using this code:

top_dest <- flights2 |>
  count(dest, sort = TRUE) |>
  head(10)

How can you find all flights to those destinations?

```{r}
flights2 <- flights |> 
  select(year, time_hour, origin, dest, tailnum, carrier)

top_dest <- flights2 |>
  count(dest, sort = TRUE) |>
  head(10)

flights2 |>
  semi_join(top_dest, by = c("dest"))
  
```

## 3. Does every departing flight have corresponding weather data for that hour?

```{r}
flights2 |> 
  left_join(weather |> select(time_hour, temp, wind_speed, precip))
```

## 4. What do the tail numbers that don’t have a matching record in planes have in common? (Hint: one variable explains ~90% of the problems.)

```{r}
flights2 |>
  left_join(planes, by = c("tailnum"))

```
Their type is not fixed wing multi engine



## 5. Add a column to planes that lists every carrier that has flown that plane. You might expect that there’s an implicit relationship between plane and airline, because each plane is flown by a single airline. Confirm or reject this hypothesis using the tools you’ve learned in previous chapters.

```{r}
planes2 <- planes |>
  left_join(flights, by = c("tailnum")) |>
  select(model, manufacturer, tailnum, carrier)

planes2

#I think this hypothesis is correct
```

## 6. Add the latitude and the longitude of the origin and destination airport to flights. Is it easier to rename the columns before or after the join?

```{r}
new_flights <- flights |>
  left_join(airports, by = c("origin" = "faa")) |>
  left_join(airports, by = c("dest" = "faa"))

new_flights

#it is easy to rename the columns either way because R will rename it lat.x and lat.y for origin and destination
```


## 7. Compute the average delay by destination, then join on the airports data frame so you can show the spatial distribution of delays.

```{r}
mean_delay <- airports |>
  left_join(flights, by = c("faa" = "dest")) |>
  filter(!is.na(dep_delay)) |>
  group_by(name) |>
  mutate(mean = mean(dep_delay))

mean_delay

mean_delay |>
  ggplot(aes(x = lon, y = lat)) +
    borders("state") +
    geom_point(mapping = aes(color = mean)) +
    coord_quickmap()
```

## 8. What happened on June 13 2013? Draw a map of the delays, and then use Google to cross-reference with the weather.

```{r}
mean_delay |>
  filter(year == 2013, day == 13, month == 6) |>
  ggplot(aes(x = lon, y = lat)) +
    borders("state") +
    geom_point(mapping = aes(color = mean)) +
    coord_quickmap()

#from google - severe thunderstorms, higher range of mean.
```